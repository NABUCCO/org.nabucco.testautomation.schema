/*
* Copyright 2010 PRODYNA AG
*
* Licensed under the Eclipse Public License (EPL), Version 1.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.opensource.org/licenses/eclipse-1.0.php or
* http://www.nabucco-source.org/nabucco-license.html
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
package org.nabucco.testautomation.schema.facade.datatype;

import org.nabucco.framework.base.facade.datatype.NabuccoDatatype;
import org.nabucco.framework.base.facade.datatype.Name;
import org.nabucco.framework.base.facade.datatype.Description;
import org.nabucco.framework.base.facade.datatype.Flag;
import org.nabucco.testautomation.schema.facade.datatype.attribute.Attribute;
import org.nabucco.testautomation.facade.datatype.base.HierarchyLevelType;
import org.nabucco.testautomation.schema.facade.datatype.ScriptContainerType;
import org.nabucco.testautomation.schema.facade.datatype.SchemaElement;

@Author			Steffen Schmidt
@Company		PRODYNA AG
@Date			2010-04-08
@Description	A SchemaElement defining one instance of TestConfigElement
public Datatype SchemaElement extends NabuccoDatatype {

	private Enumeration HierarchyLevelType[1] level;
	
	private Enumeration ScriptContainerType[1] scriptsAllowed;
	
	private Basetype Name[1] name;
	
	@MaxLength 6
	private Basetype Name[1] prefix;

	private Basetype Description[0..1] description;
	
	private Basetype Flag[1] propertyContainer;

	private Basetype Flag[1] skipable;
	
	private Basetype Flag[1] hasDependencies;

	private Basetype Flag[1] defaultDependency;

	private Basetype Flag[1] manualExecutionAllowed;

	private Basetype Flag[1] jiraExport;

	private Basetype Flag[1] cloneContext;
	
	private Datatype SchemaElement[0..*] schemaElementList;
	
	private Datatype Attribute[0..*] attributeList;
	
}
